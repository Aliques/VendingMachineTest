// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VendingMachineTest.Infrastructure;

namespace VendingMachineTest.Infrastructure.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20211211175851_added 'is blocked' field")]
    partial class addedisblockedfield
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VendingMachineTest.Domain.Entities.Coin", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ChangingDate")
                        .HasColumnName("changing_date")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("IsBlocked")
                        .HasColumnName("is_blocked")
                        .HasColumnType("bit");

                    b.Property<decimal>("Value")
                        .HasColumnName("value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Guid");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("VendingMachineTest.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ChangingDate")
                        .HasColumnName("changing_date")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Cost")
                        .HasColumnName("cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("CreationDate")
                        .HasColumnName("creation_date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Name")
                        .HasColumnName("name")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnName("quantity")
                        .HasColumnType("int");

                    b.HasKey("Guid");

                    b.ToTable("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
